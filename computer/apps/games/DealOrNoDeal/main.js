var RHO = 0.777; var amounts = { amount0 : "$0.01", amount1 : "$1", amount5 : "$5", amount10 : "$10", amount25 : "$25", amount50 : "$50", amount75 : "$75", amount100 : "$100", amount200 : "$200", amount300 : "$300", amount400 : "$400", amount500 : "$500", amount750 : "$750", amount1000 : "$1,000", amount5000 : "$5,000", amount10000 : "$10,000", amount25000 : "$25,000", amount50000 : "$50,000", amount75000 : "$75,000", amount100000 : "$100,000", amount200000 : "$200,000", amount300000 : "$300,000", amount400000 : "$400,000", amount500000 : "$500,000", amount750000 : "$750,000", amount1000000 : "$1,000,000" }; var casesPerRound = [ 6, 5, 4, 3, 2, 1, 1, 1, 1 ]; var numberSelectededFirst; var turn = 0; var round = 0; var casesLeftToOpen; var caseAmounts = []; var waitingForDealOrNoDeal = false; var offerToExpectedValueRatio = 0; function setMessage(message) { "use strict"; var messageSpanElement; messageSpanElement = document.getElementById("message"); if (messageSpanElement.firstChild) { messageSpanElement.removeChild(messageSpanElement.firstChild); } messageSpanElement.appendChild(document.createTextNode(message)); } function setFirstOrLastCaseButtonsVisibility(visibility) { var firstOrLastCaseButtons; firstOrLastCaseButtons = document .getElementsByClassName("firstOrLastCaseButtons"); firstOrLastCaseButtons[0].style.visibility = visibility; firstOrLastCaseButtons[1].style.visibility = visibility; } function handleLastCaseButton(event) { "use strict"; var amountString; var amountElement; try { for ( var amount in amounts) { if (amounts.hasOwnProperty(amount)) { amountElement = document.getElementById(amount); if (amountElement.firstChild !== null) { if (amountElement.firstChild.nodeValue != amounts[caseAmounts[numberSelectededFirst - 1]]) { amountString = amountElement.firstChild.nodeValue; break; } } } } setMessage("You have won " + amountString + ". Refresh you browser to start a new game."); clearAmounts(); clearButtons(); setFirstOrLastCaseButtonsVisibility("hidden"); } catch (exception) { console.log(exception); } event.preventDefault(); return false; } function handleFirstCaseButton(event) { "use strict"; try { setMessage("You have won " + amounts[caseAmounts[numberSelectededFirst - 1]].toLocaleString() + ". Refresh you browser to start a new game."); clearAmounts(); clearButtons(); setFirstOrLastCaseButtonsVisibility("hidden"); } catch (exception) { console.log(exception); } event.preventDefault(); return false; } function roundToTheLowestTens(input) { return 10.0 * Math.floor(input / 10.0); } function roundToTheLowestHundreds(input) { return 100.0 * Math.floor(input / 100.0); } function roundToTheLowestThousands(input) { return 1000.0 * Math.floor(input / 1000.0); } function calculateOffer() { var count = 0; var total = 0; var expectedValue; var offer; var spanElement; for ( var amount in amounts) { if (amounts.hasOwnProperty(amount)) { spanElement = document.getElementById(amount); if (spanElement.lastChild !== null) { count += 1; total += Number(amount.substr("amount".length)); } } } expectedValue = total / count; offerToExpectedValueRatio = offerToExpectedValueRatio + (1.0 - offerToExpectedValueRatio) * Math.pow(RHO, 9 - round); offer = offerToExpectedValueRatio * expectedValue; if (expectedValue > 1000.0) { offer = roundToTheLowestThousands(offer); } else if (expectedValue > 100.0) { offer = roundToTheLowestHundreds(offer); } else if (offer > 10.0) { offer = roundToTheLowestTens(offer); } return offer; } function clearButtons() { "use strict"; var cellElement; for (var i = 26; i > 0; i -= 1) { cellElement = document.getElementById("cell" + i); if (cellElement.lastChild !== null) { cellElement.removeChild(cellElement.lastChild); } } } function clearAmounts() { "use strict"; var spanElement; for ( var amount in amounts) { if (amounts.hasOwnProperty(amount)) { spanElement = document.getElementById(amount); if (spanElement.lastChild !== null) { spanElement.removeChild(spanElement.lastChild); } } } } function shuffleCaseAmounts() { "use strict"; var caseCount = caseAmounts.length; var target; var tmp; for (var i = 0; i < caseCount; i += 1) { target = Math.floor(Math.random() * caseCount); tmp = caseAmounts[target]; caseAmounts[target] = caseAmounts[i]; caseAmounts[i] = tmp; } } function fillCases() { "use strict"; caseAmounts = []; for ( var amount in amounts) { if (amounts.hasOwnProperty(amount)) { caseAmounts.push(amount); } } shuffleCaseAmounts(); console.log(caseAmounts); } function setDealOrNoDealButtonsVisibility(visibility) { var dealOrNoDealButtons; dealOrNoDealButtons = document .getElementsByClassName("dealOrNoDealButtons"); dealOrNoDealButtons[0].style.visibility = visibility; dealOrNoDealButtons[1].style.visibility = visibility; } function eliminateAmount(number) { var amountElement; amountElement = document.getElementById(caseAmounts[number - 1]); amountElement.removeChild(amountElement.firstChild); } function handleDealButton(event) { "use strict"; try { setDealOrNoDealButtonsVisibility("hidden"); setMessage("You have won $" + calculateOffer().toLocaleString() + ". Your case containted " + amounts[caseAmounts[numberSelectededFirst - 1]] + ". Refresh you browser to start a new game."); clearAmounts(); clearButtons(); } catch (exception) { console.log(exception); } event.preventDefault(); return false; } function handleNoDealButton(event) { "use strict"; try { round += 1; casesLeftToOpen = casesPerRound[round]; waitingForDealOrNoDeal = false; setDealOrNoDealButtonsVisibility("hidden"); casesLeftToOpen = casesPerRound[round]; if (casesLeftToOpen) { setMessage("Pick " + casesLeftToOpen + " more cases."); } else { setMessage("You can now switch cases. Do you still want to open first case that you chose or the last case."); setDealOrNoDealButtonsVisibility("hidden"); setFirstOrLastCaseButtonsVisibility("visible"); } } catch (exception) { console.log(exception); } event.preventDefault(); return false; } function handleNumberSelection(event) { "use strict"; var number; var cellElement; try { if (!waitingForDealOrNoDeal) { number = Number(event.target.id.substr("button".length)); if (turn === 0) { numberSelectededFirst = number; casesLeftToOpen = casesPerRound[round]; setMessage("You picked case " + number + ". Now pick " + casesLeftToOpen + " more cases."); } else { casesLeftToOpen -= 1; setMessage("You have eliminated the " + amounts[caseAmounts[number - 1]] + " amount. You have " + casesLeftToOpen + " cases left to open."); eliminateAmount(number); if (casesLeftToOpen === 0) { setMessage("You have eliminated the " + amounts[caseAmounts[number - 1]] + " amount. Your offer is $" + calculateOffer().toLocaleString() + "."); waitingForDealOrNoDeal = true; setDealOrNoDealButtonsVisibility("visible"); } } cellElement = document.getElementById("cell" + number); cellElement.removeChild(cellElement.firstChild); turn += 1; } } catch (exception) { console.log(exception); } event.preventDefault(); return false; } function drawButtons() { "use strict"; var buttonElement; for (var i = 26; i > 0; i -= 1) { buttonElement = document.getElementById("button" + i); buttonElement.appendChild(document.createTextNode(i)); buttonElement.addEventListener("click", handleNumberSelection); } buttonElement = document.getElementById("dealButton"); buttonElement.addEventListener("click", handleDealButton); buttonElement = document.getElementById("noDealButton"); buttonElement.addEventListener("click", handleNoDealButton); buttonElement = document.getElementById("firstCaseButton"); buttonElement.addEventListener("click", handleFirstCaseButton); buttonElement = document.getElementById("lastCaseButton"); buttonElement.addEventListener("click", handleLastCaseButton); } function drawAmounts() { "use strict"; var spanElement; for ( var amount in amounts) { if (amounts.hasOwnProperty(amount)) { spanElement = document.getElementById(amount); spanElement.appendChild(document.createTextNode(amounts[amount])); } } } function init() { "use strict"; drawAmounts(); drawButtons(); fillCases(); setMessage("Please choose the case that you think contains the million dollars."); } window.addEventListener("load", init); 