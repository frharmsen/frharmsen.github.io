var stack = []; function updateStack() { "use strict"; var stackEntry; var textNode; var stackIndex; for (var i = 1; i <= 5; i += 1) { stackEntry = document.getElementById("stack-entry-" + i); textNode = stackEntry.lastChild; if (textNode) { stackEntry.removeChild(textNode); } stackIndex = i - 1; if (stack[stackIndex]) { textNode = document.createTextNode(stack[stackIndex]); stackEntry.appendChild(textNode); } } } function divideNumbers(event) { "use strict"; var topOfStack; var secondInStack; try { topOfStack = stack.shift(); secondInStack = stack.shift(); stack.unshift(Number(secondInStack) / Number(topOfStack)); updateStack(); } catch (exception) { console.log(exception); } event.preventDefault(); return false; } function multiplyNumbers(event) { "use strict"; var topOfStack; var secondInStack; try { topOfStack = stack.shift(); secondInStack = stack.shift(); stack.unshift(Number(topOfStack) * Number(secondInStack)); updateStack(); } catch (exception) { console.log(exception); } event.preventDefault(); return false; } function subtractNumbers(event) { "use strict"; var topOfStack; var secondInStack; try { topOfStack = stack.shift(); secondInStack = stack.shift(); stack.unshift(Number(secondInStack) - Number(topOfStack)); updateStack(); } catch (exception) { console.log(exception); } event.preventDefault(); return false; } function addNumbers(event) { "use strict"; var topOfStack; var secondInStack; try { topOfStack = stack.shift(); secondInStack = stack.shift(); stack.unshift(Number(topOfStack) + Number(secondInStack)); updateStack(); } catch (exception) { console.log(exception); } event.preventDefault(); return false; } function overNumber(event) { "use strict"; var topOfStack; var secondInStack; try { topOfStack = stack.shift(); secondInStack = stack.shift(); stack.unshift(secondInStack); stack.unshift(topOfStack); stack.unshift(secondInStack); updateStack(); } catch (exception) { console.log(exception); } event.preventDefault(); return false; } function dupNumber(event) { "use strict"; var topOfStack; try { topOfStack = stack.shift(); stack.unshift(topOfStack); stack.unshift(topOfStack); updateStack(); } catch (exception) { console.log(exception); } event.preventDefault(); return false; } function swapNumbers(event) { "use strict"; var topOfStack; var secondInStack; try { topOfStack = stack.shift(); secondInStack = stack.shift(); stack.unshift(topOfStack); stack.unshift(secondInStack); updateStack(); } catch (exception) { console.log(exception); } event.preventDefault(); return false; } function dropNumber(event) { "use strict"; try { stack.shift(); updateStack(); } catch (exception) { console.log(exception); } event.preventDefault(); return false; } function enterNumber(event) { "use strict"; var numberInput; try { numberInput = document.getElementById("number-input"); stack.unshift(numberInput.value); updateStack(); numberInput.value = ""; } catch (exception) { console.log(exception); } event.preventDefault(); return false; } function setFunctonForButton(buttonName, eventFunction) { var buttonElement = document.getElementById(buttonName); buttonElement.addEventListener("click", eventFunction); } function init() { "use strict"; setFunctonForButton("submit-button", enterNumber); setFunctonForButton("drop-button", dropNumber); setFunctonForButton("swap-button", swapNumbers); setFunctonForButton("dup-button", dupNumber); setFunctonForButton("over-button", overNumber); setFunctonForButton("add-button", addNumbers); setFunctonForButton("subtract-button", subtractNumbers); setFunctonForButton("multiply-button", multiplyNumbers); setFunctonForButton("divide-button", divideNumbers); } window.addEventListener("load", init); 